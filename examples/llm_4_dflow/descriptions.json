{
    "greet": "I want to create a dialogue scenario for greeting a user. The scenario will consist of a generic intent and the assistant will respond with \"Hello there!\".",
    "ask_weather": "I want to create a dialogue scenario for telling the weather forecast. The assistant will ask for the city the user wants to learn the forecast for and will call the API http://services.issel.ee.auth.gr/general_information/weather_openweather with city as a query parameter and will present the retrieved information to the user via a speak event. The retrieved information is located in the temp field of the response object. The response expression will be \"The weather forecast will be \" retrieved_temp \" for \" requested_city.",
    "book_appointment": "I want to create a dialogue scenario for a doctor appointment scheduling. The assistant should ask the user to provide the doctor name, date and time, and then use all these parameters to call the API. It is a post API is https://health.com/medical/book_appointment  that receives the three parameters as body params. Then, if successful it should respond to the user with \"Doctor {doctor_name} is waiting for you at {date}, {time}\".",
    "remind_medicine": "Please write a dialogue for notifing a user for their medication of the day. The list is in https://health.com/profile/medication_list in response parameter medication. Create an intent with possible user utterances, call the api and state the message: \"Today you have to take\" {medication} .",
    "open_window": "I want an assistant interaction for opening a smart windown. There will be an access control system that uses the username of the user, stored in a slot, and if it belongs to the user_parent role it will fire an event to uri: `/window` with message `open` and say `Sure, I am opening it right now`. If not, it will be a user_child role (which is also the default role), then it will say `I am sorry, you are not authorized`. Include the username-role mappings from the /home/Desktop/ac_policies.txt file.",
    "user_profile": "Write an assistant interaction for registering a new user to our platform. We ask only for name and age and POST it to the https://platform.health.gr/user/regist API as query parameters. After that answer with 'Glad to meet you' and the name of the user.",
    "retrieve_steps": "Create a dialogue scenario for a user that wants to learn how many steps they have made in the current day. The steps are stored in the personal data registry in https://health.com/profile/steps under the 'steps' response object param. Retrieve it and say 'Today you have done {steps} steps so far.'",
    "take_notes": "We want to support a note taking functionality verbally. We have an api that gets a `note` body parameter and stores it internally in the user profile. The api is a post api in https://services.issel.auth.gr/profile/notes. Ask user for what they want to save, send it to the API and respond 'OK, noted!'",
    "buy_amazon": "Amazon buy assistant scenario, where user states a product (via an entity preferably) and the assistant calls the POST API: https://api.amazon.com/products/buy with body param `product`. Check the username slot of the user if it is in parent or child role and if it a parent, do the process, send the product to the API and then say a successful response message. Otherwise, suggest them to ask their parents as they are not allowed to do that. the role username mappings are in the /home/Desktop/users.txt file.",
    "log_food": "Craft a meal logging interaction. When users want to store the meal they ate, ask them the exact dish and volume they consumed, store it and send it to https://services.issel.auth.gr/profile/meal POST api as body params with names dish and volume. Respond with `Thanks for letting me know!`."
}